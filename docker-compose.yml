version: "3.6"
services:
    app0:
        pid: "host"
        container_name: "app0"
        build:
          context: ./java
          # dockerfile: Dockerfile
          # args:
          #   - EXPORT_PORTS: 80
          #   - AUTO_RUN_COMMAND: "java -version"
        volumes:
          - ${WORKING_DIR}/java/files:/data:rw
        command: java -jar /data/demo-0.0.1-SNAPSHOT.jar
        ports:
          - "${APP_EXPORT_PORTS}:8080"
        networks:
            default:
                # ipv4_address: ${REDIS_IP}
        links:
          - redis

    openresty:
        pid: "host"
        image: openresty/openresty:alpine
        ports:
           - "${NGINX_HTTP_HOST_PORT}:80"
           - "${NGINX_HTTPS_HOST_PORT}:443"
        volumes:
            - ${WORKING_DIR}/nginx/conf:/usr/local/openresty/nginx/conf:ro
            - ${WORKING_DIR}/wwwlog:/data/wwwlogs:rw
            - ${WORKING_DIR}/var/log:/var/log:rw
        container_name: openresty
        shm_size: 64M
        stdin_open: true
        tty: true
        links:
          - redis
        restart: "no"
        networks:
            default:
                ipv4_address: ${NGINX_IP}

    redis:
        pid: "host"
        image: redis:${REDIS_VERSION}
        ports:
          - "${REDIS_HOST_PORT}:6379"
        volumes:
          - ${WORKING_DIR}/redis/redis.conf:/etc/redis.conf:ro
          - ${WORKING_DIR}/redis:/data:rw
        container_name: redis
        shm_size: 64M
        sysctls:
          - net.core.somaxconn=511
          - net.ipv4.tcp_syncookies= 0
        ports:
          - "6380:6379"
        stdin_open: true
        tty: true
        restart: "no"
        entrypoint: ["sysctl", "vm.overcommit_memory", "1"]
        entrypoint: ["redis-server", "/etc/redis.conf"]
        networks:
            default:
                ipv4_address: ${REDIS_IP}

networks:
    default:
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet: ${DOCKER_SUBNET}
